{
	"id": "8e24af0146458ef69e9666fe7e5c2b1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"SOLPractice/WTF001.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\n\ncontract WTF001 {\n\n\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SOLPractice/WTF001.sol": {
				"WTF001": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SOLPractice/WTF001.sol\":35:61  contract WTF001 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SOLPractice/WTF001.sol\":35:61  contract WTF001 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b8669a9a335fc49d90f83e76af1bb3f368a7b65ccb8e244f28e084f9d64013b364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b8669a9a335fc49d90f83e76af1bb3f368a7b65ccb8e244f28e084f9d64013b364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH7 0x9A9A335FC49D90 0xF8 RETURNDATACOPY PUSH23 0xAF1BB3F368A7B65CCB8E244F28E084F9D64013B364736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "35:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b8669a9a335fc49d90f83e76af1bb3f368a7b65ccb8e244f28e084f9d64013b364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH7 0x9A9A335FC49D90 0xF8 RETURNDATACOPY PUSH23 0xAF1BB3F368A7B65CCB8E244F28E084F9D64013B364736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "35:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8669a9a335fc49d90f83e76af1bb3f368a7b65ccb8e244f28e084f9d64013b364736f6c63430008110033",
									".code": [
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 61,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SOLPractice/WTF001.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SOLPractice/WTF001.sol\":\"WTF001\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SOLPractice/WTF001.sol\":{\"keccak256\":\"0xd9e655d3592b6c85e1d7a411260bcecb1bc6c60c4a208b111475fe4c15a5a040\",\"urls\":[\"bzz-raw://c0934c885916e5bbb0d533f35c4962b9f38dccc82dfe9673204284cec400243b\",\"dweb:/ipfs/QmW5mdYGneEsdA7LTq2XMHQ27VoUyRU117G26hDqg2CBrR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SOLPractice/WTF001.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SOLPractice/WTF001.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SOLPractice/WTF001.sol": {
				"ast": {
					"absolutePath": "SOLPractice/WTF001.sol",
					"exportedSymbols": {
						"WTF001": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WTF001",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WTF001",
							"nameLocation": "44:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:26:0",
							"usedErrors": []
						}
					],
					"src": "0:61:0"
				},
				"id": 0
			}
		}
	}
}