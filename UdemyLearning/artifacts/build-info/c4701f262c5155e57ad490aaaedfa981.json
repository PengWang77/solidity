{
	"id": "c4701f262c5155e57ad490aaaedfa981",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"SOLPractice/WTF001.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\n\ncontract WTF001 {\n\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SOLPractice/WTF001.sol": {
				"WTF001": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SOLPractice/WTF001.sol\":35:60  contract WTF001 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SOLPractice/WTF001.sol\":35:60  contract WTF001 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c07f1683248cdd91c6bc90d611290da7d754f2d02f5e421c248408af4760c64164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c07f1683248cdd91c6bc90d611290da7d754f2d02f5e421c248408af4760c64164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH32 0x1683248CDD91C6BC90D611290DA7D754F2D02F5E421C248408AF4760C6416473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "35:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c07f1683248cdd91c6bc90d611290da7d754f2d02f5e421c248408af4760c64164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH32 0x1683248CDD91C6BC90D611290DA7D754F2D02F5E421C248408AF4760C6416473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "35:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 60,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c07f1683248cdd91c6bc90d611290da7d754f2d02f5e421c248408af4760c64164736f6c63430008110033",
									".code": [
										{
											"begin": 35,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 60,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 60,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 60,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SOLPractice/WTF001.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SOLPractice/WTF001.sol\":\"WTF001\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SOLPractice/WTF001.sol\":{\"keccak256\":\"0x7dda05bbaa640d9ce98edc1cacaf59735dc07d0644d45020ad1c574921b92c22\",\"urls\":[\"bzz-raw://a5918b5487bdb5950d44d9be57ddbbfed0b72167d28cbf5c576575c730c3bd41\",\"dweb:/ipfs/QmNdTSpwXsx9XFQwmsNDYeLGwFznPN6ku7XT5jZe8MRmKh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SOLPractice/WTF001.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SOLPractice/WTF001.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SOLPractice/WTF001.sol": {
				"ast": {
					"absolutePath": "SOLPractice/WTF001.sol",
					"exportedSymbols": {
						"WTF001": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WTF001",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WTF001",
							"nameLocation": "44:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:25:0",
							"usedErrors": []
						}
					],
					"src": "0:60:0"
				},
				"id": 0
			}
		}
	}
}